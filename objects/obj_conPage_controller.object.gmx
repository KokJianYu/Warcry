<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>control = "Timer";
timeOption = "60";
livesOption = "5";
ballsOption = "3";

tIndex = 1;
lIndex = 0;
bIndex = 0;

alarm[0] = 7;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if(gamepad_button_check_pressed(0, gp_padd)){
    if(control = "Timer"){
        control = "Lives";
        tIndex -= 1;
        lIndex += 1;
    }else
    if(control = "Lives"){
        control = "Balls";
        lIndex -= 1;
        bIndex += 1;
    }else
    if(control = "Balls"){
        control = "Timer";
        bIndex -= 1;
        tIndex += 1;
    }
}

if(gamepad_button_check_pressed(0, gp_padu)){
    if(control = "Timer"){
        control = "Balls";
        tIndex -= 1;
        bIndex += 1;
    }else
    if(control = "Lives"){
        control = "Timer";
        lIndex -= 1;
        tIndex += 1;
    }else
    if(control = "Balls"){
        control = "Lives";
        bIndex -= 1;
        lIndex += 1;
    }
}

if(gamepad_button_check_pressed(0, gp_padr)){
    if(control = "Timer"){
        if(timeOption = "60"){
            timeOption = "90";
        }else
        if(timeOption = "90"){
            timeOption = "120";
        }else
        if(timeOption = "120"){
            timeOption = "60";
        }
        tIndex += 2;
    }
    
    if(control = "Lives"){
        if(livesOption = "5"){
            livesOption = "8";
        }else
        if(livesOption = "8"){
            livesOption = "12";
        }else
        if(livesOption = "12"){
            livesOption = "5";
        }
        lIndex += 2;
    }
    
    if(control = "Balls"){
        if(ballsOption = "3"){
            ballsOption = "5";
        }else
        if(ballsOption = "5"){
            ballsOption = "8";
        }else
        if(ballsOption = "8"){
            ballsOption = "3";
        }
        bIndex +=2;
    }
}

if(gamepad_button_check_pressed(0, gp_padl)){
     if(control = "Timer"){
        if(timeOption = "60"){
            timeOption = "120";
        }else
        if(timeOption = "120"){
            timeOption = "90";
        }else
        if(timeOption = "90"){
            timeOption = "60";
        }
        tIndex -= 2;
    }
    
    if(control = "Lives"){
        if(livesOption = "5"){
            livesOption = "12";
        }else
        if(livesOption = "12"){
            livesOption = "8";
        }else
        if(livesOption = "8"){
            livesOption = "5";
        }
        lIndex -= 2;
    }
    
    if(control = "Balls"){
        if(ballsOption = "3"){
            ballsOption = "8";
        }else
        if(ballsOption = "8"){
            ballsOptions = "5";
        }else
        if(ballsOption = "5"){
            ballsOption = "3";
        }
        bIndex -= 2;
    }
}

alarm[0] = 7;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if(gamepad_button_check_pressed(0, gp_face2)){
    //TODO: 
    global.timer = real(timeOption);
    global.nLives = real(livesOption);
    global.nBalls = real(ballsOption);
    
    room_goto(room_select_character);
}

if(gamepad_button_check_pressed(0, gp_face2)){
    if(control = "Timer"){

    }else
    if(control = "Lives"){

    }
    else
    if(control = "Balls"){
        
    }
}

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="64">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//To display the page title and backdrop for options
draw_sprite(spr_conPage_Title, 0, room_width/2, room_height/2-260);
draw_sprite(bck_conPage_backdrop, 0, room_width/2+12, room_height/2+20);
 
//Decides the display according to the option
draw_sprite(sprite_timer, tIndex, room_width/2+175, 360 - 80);
draw_sprite(sprite_lives, lIndex, room_width/2-50, 360+20);
draw_sprite(sprite_balls, bIndex, room_width/2-50, 360 + 120);

</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
